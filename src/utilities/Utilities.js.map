{"version":3,"file":"Utilities.js","sourceRoot":"","sources":["Utilities.ts"],"names":[],"mappings":"AAEA;;GAEG;AACH,MAAM,OAAO,SAAS;IACb,MAAM,KAAK,IAAI;QACpB,OAAO,MAAM,CAAC,UAAU,EAAE,CAAC;IAC7B,CAAC;IACM,MAAM,CAAC,MAAM,GAAG,CAAC,IAAY,EAAgB,EAAE,CACpD,0EAA0E,CAAC,IAAI,CAC7E,IAAI,CACL,CAAC;IAEG,MAAM,CAAC,gBAAgB,GAAG,CAAI,KAAmB,EAAK,EAAE,CAC7D,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAM,CAAC","sourcesContent":["import { UUID } from \"../Generic.types.js\";\n\n/**\n * Example: \"c4076ede-bddf-47f3-8237-5712b4d3eda6\"\n */\nexport class Utilities {\n  public static get uuid() {\n    return crypto.randomUUID();\n  }\n  public static isUUID = (uuid: string): uuid is UUID =>\n    /^[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(\n      uuid\n    );\n\n  public static getRandomElement = <T>(array: readonly T[]): T =>\n    array[Math.floor(Math.random() * array.length)] as T;\n}\n"]}